# Generated by Django 5.1 on 2025-04-24 19:31

import django.db.models.deletion
import user.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CategoriesOfStudents",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("1-4", "Grades 1‑4"),
                            ("5-8", "Grades 5‑8"),
                            ("9-12", "Grades 9‑12"),
                            ("adult", "Adult"),
                        ],
                        max_length=10,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Country"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Language"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Subject"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="BaseUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "role",
                    models.CharField(
                        choices=[("student", "Student"), ("teacher", "Teacher")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="City")),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cities",
                        to="user.country",
                        verbose_name="Country",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Cities",
                "unique_together": {("name", "country")},
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=50, verbose_name="First name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=50, verbose_name="Last name"),
                ),
                ("age", models.PositiveIntegerField(default=18, verbose_name="Age")),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Phone"
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True, upload_to="student/photos/", verbose_name="Photo"
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="students",
                        to="user.city",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="students",
                        to="user.country",
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="students",
                        to="user.language",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=50, verbose_name="First name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=50, verbose_name="Last name"),
                ),
                ("age", models.PositiveIntegerField(default=18, verbose_name="Age")),
                (
                    "photo",
                    models.ImageField(
                        blank=True, upload_to="teacher/photos/", verbose_name="Photo"
                    ),
                ),
                (
                    "teaching_experience",
                    models.PositiveIntegerField(
                        verbose_name="Teaching experience (years)"
                    ),
                ),
                ("about_me", models.TextField(blank=True, verbose_name="About me")),
                ("hobbies", models.TextField(blank=True, verbose_name="Hobbies")),
                ("education", models.TextField(blank=True, verbose_name="Education")),
                (
                    "lesson_flow",
                    models.TextField(blank=True, verbose_name="Lesson flow"),
                ),
                (
                    "lesson_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        verbose_name="Lesson price (UAH)",
                    ),
                ),
                (
                    "lesson_duration",
                    models.PositiveIntegerField(
                        verbose_name="Lesson duration (minutes)"
                    ),
                ),
                (
                    "telegram",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Telegram"
                    ),
                ),
                (
                    "whatsapp",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Whatsapp"
                    ),
                ),
                (
                    "viber",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Viber"
                    ),
                ),
                (
                    "instagram",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Instagram"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Verified"),
                ),
                ("rating", models.FloatField(default=0, verbose_name="Rating")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "categories",
                    models.ManyToManyField(
                        related_name="teachers", to="user.categoriesofstudents"
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="user.city",
                    ),
                ),
                (
                    "subjects",
                    models.ManyToManyField(related_name="teachers", to="user.subject"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
